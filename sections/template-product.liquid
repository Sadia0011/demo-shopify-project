
<link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css"/>
<script src="https://unpkg.com/swiper@7/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}


<style>
    .container{
        max-width: 1440px;
        margin: auto;
    }
.product-container{
    /* grid grid-cols-1 md:grid-cols-2 gap-3 */
      display: grid;
      grid-template-columns: repeat(2,1fr);
      justify-content: center;
      align-items: start;
      gap: 20px;
}
.product-description{
     flex: 1;
}
.media{
    flex: 1;
    height: 10rem;
    overflow: hidden;
    padding: 2px;
}
.title{
    font-size: 24px;
    color: gray;
}
.product--medias{
    display: block;
}
.md-swipper{
    display: none;
}
.swiper-button-prev, .swiper-button-next { color: black; top: auto !important; height: 20px; }
    .swiper-button-prev::after, .swiper-button-next::after { font-size: 20px; }
    .swiper-pagination { color: black; bottom: 0 !important; }
    .swiper-pagination-bullet-active { background: black !important; }
    .product--information { height: fit-content; }


    .product-information{
        /* product--information sticky top-5 p-2" */
        position: sticky;
        top: 5px;
        padding: 2px;
    }
.margin-3{
    margin-top: 3px;
    margin-bottom: 3px;
}

.vendor{
    font-size: small;
    color: gray;
}

.compare-price{
    font-size: small;
    color: gray;
    text-decoration: line-through;
}
.price{
    font-size: large;
    color: gray;
}
.sale{
    padding: 5px;
    font-size: small;
    font-weight: bold;
    background-color: red;
    color: white;
    border-radius: 16px;
    margin-left: 4px;
}
.input{
    width: 100%;
    border: 1px solid black;
    padding: 3px;
}
.button{
    width: 100%;
    padding: 3px;
    background-color: gray;
    color: white;
    border-radius: 16px;
    margin-top: 2px;
    margin-bottom: 2px;
}
.button:hover{
    width: 100%;
    padding: 3px;
    background-color: rgb(43, 41, 41);
    color: white;
}
@media screen and (max-width: 480px) {
    .product-container{
      grid-template-columns: repeat(1,1fr);
      gap: 5px;
}
.product--medias{
    display: none;
}
.md-swipper{
    display: block;
}
}
</style>



<script>
        console.log("my product details================", {{ product.collections | json }});

        setTimeout(()=>{
            const collections = {{ product.collections | json }};
            const matchingCollection = collections.find((col) => {
            const formattedTitle = col.title.toLowerCase().replace(/\s+/g, '-'); 
            return col.handle === formattedTitle;
        });
            const breadcrumb = document.getElementById("dynamic-collection-title");
            breadcrumb.innerHTML = `<a href="/collections/${matchingCollection.handle}">${matchingCollection.title}</a>`;
            console.log(breadcrumb)
        },10)

</script>

<div class="container">
    <div class="product-container">
        <div>
            <div class="breadcrumb_container"> 
                <span><a href="/">Home</a>></span>
                <span id="dynamic-collection-title"></span> </div>
            <div>
                <div class="product--medias" >
                    {% for media in product.media %}
                        <div class="media">
                            {% render 'product-media', media: media %}
                        </div>
                    {% endfor %}
                </div>

                <div class="md-swipper">
                    <div class="swiper">
                        <div class="swiper-wrapper">
                            {% for media in product.media %}
                                <div class="swiper-slide">
                                    <div class="media">
                                        {% render 'product-media', media: media %}
                                    </div>
                                </div>
                            {% endfor %}
                        </div>

                        <div class="swiper-pagination"></div>

                        <div class="swiper-button-prev"></div>
                        <div class="swiper-button-next"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="product-information">
            {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
                <input type="hidden" name="id" value="{{ selected_variant.id }}">

                {% for block in section.blocks %}
                    {% case block.type %}
                        {% when 'vendor' %}
                            <div class="margin-3">
                                <span class="vendor">{{ product.vendor }}</span>
                            </div>
                        {% when 'title' %}
                            <div class="margin-3">
                                <h1 class="title">{{ product.title }}</h1>
                            </div>
                        {% when 'price' %}
                            <div class="margin-3" id="price-{{ section.id }}">
                                <span class="compare-price">{{ selected_variant.compare_at_price | money }}</span>
                                <span class="price">{{ selected_variant.price | money }}</span>

                                {% if selected_variant.price < selected_variant.compare_at_price %}
                                    <span class="sale">Sale</span>
                                {% endif %}
                            </div>
                        {% when 'variant_selector' %}
                            <div class="margin-3">
                                {% unless product.has_only_default_variant %}
                                    <variant-selector data-url="{{ product.url}}" data-section="{{ section.id }}">
                                        {% for option in product.options_with_values %}
                                            <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                                            <div class="margin-3">
                                                <select 
                                                    name="options[{{ option.name | escape }}]" 
                                                    id="Option-{{ section.id }}-{{ forloop.index0 }}" 
                                                    class="input"
                                                >
                                                    {% for value in option.values %}
                                                        <option 
                                                            value="{{ value | escape }}"
                                                            {% if option.selected_value == value %}
                                                                selected="selected"
                                                            {% endif %}
                                                        >
                                                            {{ value }}
                                                        </option>
                                                    {% endfor %}
                                                </select>
                                            </div>

                                            <script type="application/json">
                                                {{ product.variants | json }}
                                            </script>

                                        {% endfor %}
                                    </variant-selector>
                                {% endunless %}
                            </div>

                        {% when 'quantity' %}
                            <div class="margin-3">
                                <label for="Quantity-{{ section.id }}">Quantity</label>

                                <div class="margin-3">
                                    <input type="number" name="quantity" id="Quantity-{{ section.id }}" value="1" min="1" class="input">
                                </div>
                            </div>
                        {% when 'description' %}
                            <div class="margin-3">
                                <p class="vendor">{{ product.description }}</p>
                            </div>

                        {% when 'checkout_buttons' %}
                            <div class="margin-3">
                                <button type="submit" name="add" class="button"
                                    {% if selected_variant.available == false %}
                                        disabled
                                    {% endif %}
                                >
                                    {% if selected_variant.available == false %}
                                        Sold out
                                    {% else %}
                                        Add to cart
                                    {% endif %}
                                </button>
                            </div>
                        {% else %}
                            
                    {% endcase %}
                {% endfor %}
            {% endform %}
        </div>
    </div>
</div>

<script>
    class VariantSelector extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("change", this.onVariantChange);
        }

        onVariantChange() {
            this.getSelectedOptions();
            this.getSelectedVariant();

            if(this.currentVariant) {
                this.updateURL();
                this.updateFormID();
                this.updatePrice();
            }
        }

        getSelectedOptions() {
            this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
            console.log(this.options);
        }

        getVariantJSON() {
            this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
            return this.variantData;
        }

        getSelectedVariant() {
            this.currentVariant = this.getVariantJSON().find(
                (variant) => {
                    const findings = !variant.options.map(
                        (option, index) => {
                            return this.options[index] === option;
                        }
                    ).includes(false);

                    if(findings) return variant;
                }
            );

            console.log(this.currentVariant);
        }

        updateURL() {
            if(!this.currentVariant) return;
            window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
        }

        updateFormID() {
            const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
            form_input.value = this.currentVariant.id;
        }

        updatePrice() {
            fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
            .then((response) => response.text())
            .then((responseText) => {
                const id = `price-${this.dataset.section}`;
                const html = new DOMParser().parseFromString(responseText, 'text/html');

                const oldPrice = document.getElementById(id);
                const newPrice = html.getElementById(id);

                if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
            });
        }
    }

    customElements.define("variant-selector", VariantSelector);
</script>

<script>
    const swiper = new Swiper('.swiper', {
        direction: 'horizontal',

        pagination: {
            el: '.swiper-pagination'
        },

        navigation: {
            prevEl: '.swiper-button-prev',
            nextEl: '.swiper-button-next'
        }
    })
</script>

{% schema %}
{
    "name": "Product",
    "blocks": [
        {
            "type": "vendor",
            "name": "Vendor",
            "limit": 1
        },
        {
            "type": "title",
            "name": "Title",
            "limit": 1
        },
        {
            "type": "price",
            "name": "Price",
            "limit": 1
        },
        {
            "type": "variant_selector",
            "name": "Variant Selector",
            "limit": 1
        },
        {
            "type": "quantity",
            "name": "Quantity",
            "limit": 1
        },
        {
            "type": "description",
            "name": "Description",
            "limit": 1
        },
        {
            "type": "checkout_buttons",
            "name": "Checkout Buttons",
            "limit": 1
        }
    ]
}
{% endschema %}